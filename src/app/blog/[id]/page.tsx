"use client";
import { assets, blog_data } from "@/Assets/assets";
import React, { useEffect, useState } from "react";
import Image from "next/image";
import { StaticImageData } from "next/image";
import Link from "next/link";
interface BlogData {
  id: number;
  title: string;
  description: string;
  image: StaticImageData; // Proper type for Next.js images
  date: number;
  category: string;
  author: string;
  author_img: StaticImageData;
}

interface PageProps {
  params: {
    id: string;
  };
}

const Page = ({ params }: PageProps) => {
  // Change state type from string to BlogData or null
  const [data, setData] = useState<BlogData | null>(null);
  const [loading, setLoading] = useState(true);

  const fetchBlogData = async () => {
    const blogId = parseInt(params.id);

    // Use find() instead of a for loop - much more efficient
    const foundBlog = blog_data.find((blog) => blog.id === blogId);

    if (foundBlog) {
      setData(foundBlog);
      console.log("Data found:", foundBlog);
    } else {
      console.log("Blog not found");
      setData(null);
    }

    setLoading(false);
  };

  useEffect(() => {
    fetchBlogData();
  }, []); // Add params.id as dependency

  if (loading) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        Loading...
      </div>
    );
  }

  if (!data) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        Blog post not found
      </div>
    );
  }

  return (
    <React.Fragment>
      <div className="w-full px-4 md:px-12 py-4">
        <div className="flex justify-between items-center max-w-7xl mx-auto">
          <Link href="/">
            {" "}
            <Image
              src={assets.logo}
              className="w-[130px]"
              width={180}
              height={100}
              alt="Header Image"
            />
          </Link>
          <button className="flex items-center gap-2 px-6 py-3 font-medium cursor-pointer shadow-lg bg-white hover:bg-gray-50  border border-gray-200 transition-colors duration-200">
            Get Started
            <Image src={assets.arrow} alt="arrow icon" className="w-4 h-4" />
          </button>
        </div>
      </div>
      <div className="max-w-4xl mx-auto px-4 py-8">
        <h1 className="text-3xl font-bold mb-4">{data.title}</h1>
        <div className="text-gray-600 mb-6">
          <span>By {data.author}</span> • <span>{data.category}</span> •
          <span>{new Date(data.date).toLocaleDateString()}</span>
        </div>
        <Image
          src={data.image}
          alt={data.title}
          width={800}
          height={400}
          className="w-full h-64 object-cover rounded-lg mb-6"
          priority
        />
        <p className="text-gray-900  text-lg leading-relaxed mt-3 mb-3 ">
          {data.description}
        </p>
        <p className="text-gray-800 leading-relaxed tracking-wide">
          The current technological trajectory points toward a future defined by
          radical autonomy and hyper-personalization, driven primarily by the
        </p>
        <p>
          maturation of Agentic AI and Spatial Computing. We are moving past the
          era of static software; instead, enterprises must prepare for systems
          where self-governing digital agents handle complex, multi-step tasks
        </p>
        <p>
          {" "}
          on behalf of human users, fundamentally shifting the paradigm from
          &apos;tool use&apos; to &lsquo;intent fulfillment.&apos; Concurrently,
          the fusion of
        </p>
        <p>
          {" "}
          augmented reality (AR), virtual reality (VR), and the physical world
          through Spatial Computing is creating immersive digital twins and
          collaborative environments that will redefine remote work,
          engineering, and customer interaction.
        </p>
        <p>
          For business leaders, the strategic imperative is no longer simply
          adopting AI features, but entirely re-architecting core digital
          systems to function alongside these autonomous agents, all while
          prioritizing the development of robust, trust-based architectures to
          govern the vast, critical data streams generated by this intelligent,
          interconnected future
        </p>
      </div>
    </React.Fragment>
  );
};

export default Page;
